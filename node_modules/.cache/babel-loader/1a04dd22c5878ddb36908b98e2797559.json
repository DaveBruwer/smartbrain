{"ast":null,"code":"var _jsxFileName = \"/home/daveb/git/smarbrain/src/registerPage/registerpage.js\";\nimport React from 'react';\nimport './registerpage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass registerpage extends React.Component {\n  constructor() {\n    super();\n\n    this.onNameChange = evnt => {\n      this.setState({\n        name: evnt.target.value\n      });\n    };\n\n    this.onEmailChange = evnt => {\n      this.setState({\n        email: evnt.target.value\n      });\n    };\n\n    this.onPasswordChange = evnt => {\n      this.setState({\n        password: evnt.target.value\n      });\n    };\n\n    this.onRegister = () => {\n      fetch('http://localhost:3000/register', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          email: this.state.email,\n          password: this.state.password\n        })\n      }).then(resp => resp.json()).then(data => {\n        if (data) {\n          this.props.onRouteChange('main');\n        }\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signinform\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"glassmorph inputbox\",\n        type: \"text\",\n        placeholder: \"Name\",\n        onChange: this.onNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 109\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"glassmorph inputbox\",\n        type: \"text\",\n        placeholder: \"Email\",\n        onChange: this.onEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 111\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"glassmorph inputbox\",\n        type: \"text\",\n        placeholder: \"Password\",\n        onChange: this.onPasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 117\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"glassmorph signinBtn\",\n        onClick: this.onRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 107\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/*const registerpage = ({onRouteChange}) => {\n  return (\n      <div className='signinform'>\n        <input className='glassmorph inputbox' type='text' placeholder='Username'/><br/>\n        <input className='glassmorph inputbox' type='text' placeholder='Password'/><br/>\n        <input className='glassmorph inputbox' type='text' placeholder='Confirm Password'/><br/>\n        <button type='button' className='glassmorph signinBtn' onClick={() => onRouteChange('main')}>Register</button><br/>\n      </div>\n    );\n}*/\n\n\nexport default registerpage;","map":{"version":3,"sources":["/home/daveb/git/smarbrain/src/registerPage/registerpage.js"],"names":["React","registerpage","Component","constructor","onNameChange","evnt","setState","name","target","value","onEmailChange","email","onPasswordChange","password","onRegister","fetch","method","headers","body","JSON","stringify","state","then","resp","json","data","props","onRouteChange","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;;AAGA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AAE1CC,EAAAA,WAAW,GAAG;AACb;;AADa,SASdC,YATc,GASEC,IAAD,IAAU;AACxB,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAEF,IAAI,CAACG,MAAL,CAAYC;AAAnB,OAAd;AACA,KAXa;;AAAA,SAadC,aAbc,GAaGL,IAAD,IAAU;AACzB,WAAKC,QAAL,CAAc;AAACK,QAAAA,KAAK,EAAEN,IAAI,CAACG,MAAL,CAAYC;AAApB,OAAd;AACA,KAfa;;AAAA,SAiBdG,gBAjBc,GAiBMP,IAAD,IAAU;AAC5B,WAAKC,QAAL,CAAc;AAACO,QAAAA,QAAQ,EAAER,IAAI,CAACG,MAAL,CAAYC;AAAvB,OAAd;AACA,KAnBa;;AAAA,SAqBdK,UArBc,GAqBD,MAAM;AAClBC,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AACvCC,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAF8B;AAGvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBb,UAAAA,IAAI,EAAE,KAAKc,KAAL,CAAWd,IADG;AAEpBI,UAAAA,KAAK,EAAE,KAAKU,KAAL,CAAWV,KAFE;AAGpBE,UAAAA,QAAQ,EAAE,KAAKQ,KAAL,CAAWR;AAHD,SAAf;AAHiC,OAAnC,CAAL,CASCS,IATD,CASMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATd,EAUCF,IAVD,CAUMG,IAAI,IAAI;AACb,YAAIA,IAAJ,EAAU;AACT,eAAKC,KAAL,CAAWC,aAAX,CAAyB,MAAzB;AACA;AACD,OAdD;AAeA,KArCa;;AAEb,SAAKN,KAAL,GAAW;AACVd,MAAAA,IAAI,EAAE,EADI;AAEVI,MAAAA,KAAK,EAAE,EAFG;AAGVE,MAAAA,QAAQ,EAAE;AAHA,KAAX;AAKA;;AAgCDe,EAAAA,MAAM,GAAG;AACR,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAuC,QAAA,IAAI,EAAC,MAA5C;AAAmD,QAAA,WAAW,EAAC,MAA/D;AAAsE,QAAA,QAAQ,EAAE,KAAKxB;AAArF;AAAA;AAAA;AAAA;AAAA,cADF,eACsG;AAAA;AAAA;AAAA;AAAA,cADtG,eAEE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAuC,QAAA,IAAI,EAAC,MAA5C;AAAmD,QAAA,WAAW,EAAC,OAA/D;AAAuE,QAAA,QAAQ,EAAE,KAAKM;AAAtF;AAAA;AAAA;AAAA;AAAA,cAFF,eAEwG;AAAA;AAAA;AAAA;AAAA,cAFxG,eAGE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAuC,QAAA,IAAI,EAAC,MAA5C;AAAmD,QAAA,WAAW,EAAC,UAA/D;AAA0E,QAAA,QAAQ,EAAE,KAAKE;AAAzF;AAAA;AAAA;AAAA;AAAA,cAHF,eAG8G;AAAA;AAAA;AAAA;AAAA,cAH9G,eAIE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,sBAAhC;AAAuD,QAAA,OAAO,EAAE,KAAKE,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAIoG;AAAA;AAAA;AAAA;AAAA,cAJpG;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQA;;AAlDyC;AAgE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeb,YAAf","sourcesContent":["import React from 'react';\nimport './registerpage.css';\n\n\nclass registerpage extends React.Component {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state={\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t}\n\t}\n\n\tonNameChange = (evnt) => {\n\t\tthis.setState({name: evnt.target.value});\n\t}\n\n\tonEmailChange = (evnt) => {\n\t\tthis.setState({email: evnt.target.value});\n\t}\n\n\tonPasswordChange = (evnt) => {\n\t\tthis.setState({password: evnt.target.value});\n\t}\n\n\tonRegister = () => {\n\t\tfetch('http://localhost:3000/register', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: this.state.name,\n\t\t\t\temail: this.state.email,\n\t\t\t\tpassword: this.state.password\n\t\t\t})\n\t\t})\n\t\t.then(resp => resp.json())\n\t\t.then(data => {\n\t\t\tif (data) {\n\t\t\t\tthis.props.onRouteChange('main');\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t    <div className='signinform'>\n\t\t      <input className='glassmorph inputbox' type='text' placeholder='Name' onChange={this.onNameChange}/><br/>\n\t\t      <input className='glassmorph inputbox' type='text' placeholder='Email' onChange={this.onEmailChange}/><br/>\n\t\t      <input className='glassmorph inputbox' type='text' placeholder='Password' onChange={this.onPasswordChange}/><br/>\n\t\t      <button type='button' className='glassmorph signinBtn' onClick={this.onRegister}>Register</button><br/>\n\t\t    </div>\n\t    );\n\t}\n\n\n\n\n}\n\n\n\n\n\n\n\n\n/*const registerpage = ({onRouteChange}) => {\n  return (\n      <div className='signinform'>\n        <input className='glassmorph inputbox' type='text' placeholder='Username'/><br/>\n        <input className='glassmorph inputbox' type='text' placeholder='Password'/><br/>\n        <input className='glassmorph inputbox' type='text' placeholder='Confirm Password'/><br/>\n        <button type='button' className='glassmorph signinBtn' onClick={() => onRouteChange('main')}>Register</button><br/>\n      </div>\n    );\n}*/\n\n\nexport default registerpage;"]},"metadata":{},"sourceType":"module"}